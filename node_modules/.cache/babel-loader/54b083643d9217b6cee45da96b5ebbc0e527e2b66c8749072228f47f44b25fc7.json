{"ast":null,"code":"var _jsxFileName = \"/home/daniel/repos/byte-sized-web/src/pages/html.js\";\nimport React from 'react';\nimport Article from '../components/ArticleElements/Article.js';\nimport './html.css';\nimport boilerPlate from '../images/boilerplate.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HtmlPage() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Article, {\n      title: \"What is HTML?\",\n      text: \"HyperText Markup Language defines the structure of a webpage. An HTML element is the basic building block of a webpage and is indicated by HTML tags. Here is a element bound by <h1> tags: \",\n      code: \"<h1>Title of Section</h1>\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"html-boilerplate html-article\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"html-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"html-title\",\n          children: \"HTML Boilerplate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"html-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Boilerplate code is a template of the bare minimum code that you need in order to share a page across the web. The first tag in the document will declare what type of data is stored within so we use the \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"html\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 117\n          }, this), \" tag. The second tag includes files, scripts, and styles for formatting your webpage within the \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"head\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 115\n          }, this), \" tag. Finally the third tag you need contains all the info you want to display within the \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 109\n          }, this), \" tag. The basic structure looks like this but in a working webpage there will be tons of code in between those tags!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"article-img\",\n            src: boilerPlate,\n            alt: \"Boilerplate code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Article, {\n      title: \"Testing React\",\n      text: \"Is this working yet?\",\n      src: boilerPlate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = HtmlPage;\nexport default HtmlPage;\nvar _c;\n$RefreshReg$(_c, \"HtmlPage\");","map":{"version":3,"names":["React","Article","boilerPlate","jsxDEV","_jsxDEV","HtmlPage","children","title","text","code","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","_c","$RefreshReg$"],"sources":["/home/daniel/repos/byte-sized-web/src/pages/html.js"],"sourcesContent":["import React from 'react'\nimport Article from '../components/ArticleElements/Article.js'\nimport './html.css'\nimport boilerPlate from '../images/boilerplate.svg'\n\nfunction HtmlPage() {\n    return (\n        <div>\n            <Article\n                title='What is HTML?'\n                text='HyperText Markup Language defines the structure of a webpage. An HTML element is the basic building block of a webpage and is indicated by HTML tags. Here is a element bound by <h1> tags: '\n                code='<h1>Title of Section</h1>'\n\n            />\n            <article className='html-boilerplate html-article'>\n                <header className='html-header'>\n                    <h1 className='html-title'>HTML Boilerplate</h1>\n                </header>\n                <section className='html-section'>\n                    <p>Boilerplate code is a template of the bare minimum code that you need in order to share a page across the web.\n                        The first tag in the document will declare what type of data is stored within so we use the <strong>html</strong> tag.\n                        The second tag includes files, scripts, and styles for formatting your webpage within the <strong>head</strong> tag.\n                        Finally the third tag you need contains all the info you want to display within the <strong>body</strong> tag.\n                        The basic structure looks like this but in a working webpage there will be tons of code in between those tags!\n                    </p>\n                    <div className='img-container'>\n                        <img className='article-img' src={boilerPlate} alt='Boilerplate code' />\n                    </div>\n                </section>\n            </article>\n\n            <Article \n                title='Testing React'\n                text='Is this working yet?'\n                src={boilerPlate}\n            \n            />\n\n        </div>\n\n    )\n}\n\nexport default HtmlPage"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,0CAA0C;AAC9D,OAAO,YAAY;AACnB,OAAOC,WAAW,MAAM,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAA,EAAG;EAChB,oBACID,OAAA;IAAAE,QAAA,gBACIF,OAAA,CAACH,OAAO;MACJM,KAAK,EAAC,eAAe;MACrBC,IAAI,EAAC,8LAA8L;MACnMC,IAAI,EAAC;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAElC,eACFT,OAAA;MAASU,SAAS,EAAC,+BAA+B;MAAAR,QAAA,gBAC9CF,OAAA;QAAQU,SAAS,EAAC,aAAa;QAAAR,QAAA,eAC3BF,OAAA;UAAIU,SAAS,EAAC,YAAY;UAAAR,QAAA,EAAC;QAAgB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAK;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC3C,eACTT,OAAA;QAASU,SAAS,EAAC,cAAc;QAAAR,QAAA,gBAC7BF,OAAA;UAAAE,QAAA,GAAG,6MAC6F,eAAAF,OAAA;YAAAE,QAAA,EAAQ;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,oGACvB,eAAAT,OAAA;YAAAE,QAAA,EAAQ;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,8FAC3B,eAAAT,OAAA;YAAAE,QAAA,EAAQ;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,wHAE7G;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI,eACJT,OAAA;UAAKU,SAAS,EAAC,eAAe;UAAAR,QAAA,eAC1BF,OAAA;YAAKU,SAAS,EAAC,aAAa;YAACC,GAAG,EAAEb,WAAY;YAACc,GAAG,EAAC;UAAkB;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAG;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACtE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACA;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ,eAEVT,OAAA,CAACH,OAAO;MACJM,KAAK,EAAC,eAAe;MACrBC,IAAI,EAAC,sBAAsB;MAC3BO,GAAG,EAAEb;IAAY;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEnB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEA;AAGd;AAACI,EAAA,GApCQZ,QAAQ;AAsCjB,eAAeA,QAAQ;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}